{"version":3,"sources":["components/CompletedPage/CompletedPage.module.css","components/ShareButtons/ShareButtons.module.css","components/CopyMessage/CopyMessage.module.css","components/TitlePage/TitlePage.module.css","chartData.ts","components/CodeBox/CodeBox.tsx","components/CopyMessage/CopyMessage.tsx","components/ShareButtons/ShareButtons.tsx","components/CompletedPage/CompletedPage.tsx","components/TitlePage/TitlePage.tsx","components/SurveyPanel/SurveyPanel.tsx","surveyData.ts","App.tsx","serviceWorker.ts","index.tsx","components/CodeBox/CodeBox.module.css","components/SurveyPanel/SurveyPanel.module.css"],"names":["module","exports","answerType","chartData","name","question","expectedAnswer","answerPlaceHolder","multiples","data","value","note","CodeBox","code","onCopyClick","className","styles","container","copyIcon","onClick","navigator","clipboard","writeText","content","language","style","darcula","CopyMessage","classNames","ShareButtons","socialMediaFooter","href","socialMediaLink","aria-label","icon","CompletedPage","useState","showCopied","setShowCopied","dataWithX","console","log","xValueAffected","Object","keys","xValueDomain","xValueExpected","JSON","stringify","completedPage","copyMessage","blendInCopyMessage","headLine","answersContainer","answers","codeBox","shareContainer","sharePlease","TitlePage","onStart","time","assignment","dataDisclaimer","nextButton","type","SurveyPanel","ReactSurveyModel","showProgressBar","locale","showNavigationButtons","pages","questions","title","choices","mininumRateDescription","maximumRateDescription","newPages","map","chart","inputType","placeHolder","isRequired","unshift","getSurveyData","survey","displayChart","setDisplayChart","currentChartNo","setCurrentChartNo","isCompleted","setIsCompleted","hasStarted","setHasStarted","numberOfCharts","length","useEffect","StylesManager","applyTheme","handleNext","currentPageNo","isLastPage","nextPage","isCurrentPageHasErrors","chartNote","page","surveyContainer","chartTitle","chartContainer","width","barSize","barCategoryGap","dataKey","tickLine","tickSize","fill","position","footLine","model","App","resetHeight","document","body","height","window","innerHeight","addEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e41efe24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"completedPage\":\"CompletedPage_completedPage__13JW3\",\"codeBox\":\"CompletedPage_codeBox__37_ld\",\"xValue\":\"CompletedPage_xValue__2OyCs\",\"shareContainer\":\"CompletedPage_shareContainer__DbvKl\",\"sharePlease\":\"CompletedPage_sharePlease__1o1La\",\"answers\":\"CompletedPage_answers__bMIOB\",\"answersContainer\":\"CompletedPage_answersContainer__3ojuY\",\"copyMessage\":\"CompletedPage_copyMessage__1eGoA\",\"blendInCopyMessage\":\"CompletedPage_blendInCopyMessage__2_78y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialMediaFooter\":\"ShareButtons_socialMediaFooter__SBjkl\",\"icon\":\"ShareButtons_icon__2M01h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CopyMessage_container__sLa9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitlePage_container__3gkHl\",\"headLine\":\"TitlePage_headLine__1cch3\",\"time\":\"TitlePage_time__3RlvP\",\"dataDisclaimer\":\"TitlePage_dataDisclaimer__nwwst\",\"content\":\"TitlePage_content__kOZ1z\",\"assignment\":\"TitlePage_assignment__34ze-\",\"nextButton\":\"TitlePage_nextButton__21wDS\"};","export enum answerType {\r\n  percentage,\r\n  multiples,\r\n}\r\n\r\nexport const chartData = [\r\n  {\r\n    name:\r\n      'Anteil der 30 bis 35 Jährigen ohne beruflichen Bildungsabschluss (Studium, Ausbildung etc.)',\r\n    question:\r\n      'Um das wie Vielfache ist der Anteil bei Personen mit Migrationshintergrund größer?',\r\n    expectedAnswer: 3.2,\r\n    answerPlaceHolder: '10,5 mal',\r\n    answerType: answerType.multiples,\r\n    data: [\r\n      { name: 'Mit Migrationshintergrund', value: 32 },\r\n      { name: 'Ohne Migrationshintergrund', value: 10 },\r\n    ],\r\n  },\r\n  {\r\n    name: 'Anteil der Schüler in Privatschulen',\r\n    question:\r\n      'Wie groß ist der Anteil der Schüler auf Privatschulen in Prozent?',\r\n    expectedAnswer: 9,\r\n    answerPlaceHolder: '99%',\r\n\r\n    data: [\r\n      { name: 'Schüler in öffentlichen Schulen', value: 81 },\r\n      { name: 'Schüler auf Privatschulen', value: 9 },\r\n    ],\r\n  },\r\n\r\n  {\r\n    name: 'Durchschnittslohn nach Bundesländern',\r\n    question:\r\n      'Wie viel geringer ist der Lohn in Mecklenburg-Vorpommern in Prozent?',\r\n    expectedAnswer: 19.68,\r\n    answerPlaceHolder: '99%',\r\n    data: [\r\n      { name: 'Berlin', value: 42525 },\r\n      { name: 'Mecklenburg-Vorpommern', value: 34155 },\r\n    ],\r\n  },\r\n  {\r\n    name:\r\n      'Anteil der Menschen die den Begriff Blockchain kennen in Deutschland',\r\n    question:\r\n      'Wie groß ist der Anteil der Menschen, die den Begriff kennen in Prozent?',\r\n    expectedAnswer: 14,\r\n    answerPlaceHolder: '99%',\r\n    data: [\r\n      { name: 'nicht bekannt', value: 86 },\r\n      { name: 'bekannt', value: 14 },\r\n    ],\r\n  },\r\n  {\r\n    name: 'Treibhausgase in g/Pkm nach Verkehrsmittel',\r\n    question:\r\n      'Um wie viel prozent geringer ist der Ausstoß von Treibhausgasen in Fernlinienbussen als in Zügen?',\r\n    expectedAnswer: 10,\r\n    answerPlaceHolder: '99%',\r\n\r\n    data: [\r\n      { name: 'Eisenbahn, Fernverkehr', value: 32 },\r\n      { name: 'Fernlinienbus', value: 29 },\r\n    ],\r\n  },\r\n  {\r\n    name: 'CO² Ausstoß',\r\n    question:\r\n      'Um das wie Vielfache ist der CO² Ausstoß größer bei einer Flugreise nach Südostasien als durch das tägliche pendeln mit dem Auto?',\r\n    expectedAnswer: 6.069,\r\n    answerPlaceHolder: '10,5 mal',\r\n    data: [\r\n      { name: 'Berufspendler Auto pro Jahr*', value: 0.87 },\r\n      { name: 'Flugreise nach Südostasien', value: 5.28 },\r\n    ],\r\n    note:\r\n      '*20km Strecke pro Arbeitstag bei einem Dieselverbauch von 6.1l/100km',\r\n  },\r\n];\r\n","import React from 'react';\nimport { MdContentCopy } from 'react-icons/md';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport styles from './CodeBox.module.css';\n\ninterface IProps {\n  code: string;\n  onCopyClick: () => any;\n}\n\nexport const CodeBox: React.FC<IProps> = ({ code, onCopyClick }) => {\n  const copyCode = () => {\n    navigator.clipboard.writeText(code);\n    onCopyClick();\n  };\n\n  return (\n    <div className={styles.container}>\n      <MdContentCopy className={styles.copyIcon} onClick={copyCode} />\n\n      <div className={styles.content}>\n        <SyntaxHighlighter language=\"json\" style={darcula}>\n          {code}\n        </SyntaxHighlighter>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport styles from './CopyMessage.module.css';\n\ninterface IProps {\n  className?: string;\n}\n\nexport const CopyMessage: React.FC<IProps> = ({ className }) => {\n  return (\n    <div className={classNames(styles.container, className)}>\n      Daten kopiert!\n    </div>\n  );\n};\n","import React from 'react';\nimport { FaTelegramPlane, FaWhatsapp } from 'react-icons/fa';\nimport { FiMail } from 'react-icons/fi';\nimport styles from './ShareButtons.module.css';\n\ninterface IProps {\n  code: string;\n}\n\nexport const ShareButtons: React.FC<IProps> = ({ code }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.socialMediaFooter}>\n        <a\n          href={`mailto:schachdavid@web.de?subject=Visualization Antworten&body=Hi David,\n          hier die Antworten der Umfrage:\n          ${code}`}\n          className={styles.socialMediaLink}\n          aria-label=\"Send via Email\"\n        >\n          <FiMail className={styles.icon} />\n        </a>\n        <a\n          href={`https://telegram.me/share/url?url=${code}`}\n          className={styles.socialMediaLink}\n          aria-label=\"Send via Telegram\"\n        >\n          <FaTelegramPlane className={styles.icon} />\n        </a>\n        <a\n          href={`https://wa.me/?text=${code}`}\n          className={styles.socialMediaLink}\n          aria-label=\"Send via Whatsapp\"\n        >\n          <FaWhatsapp className={styles.icon} />\n        </a>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { chartData } from '../../chartData';\nimport { CodeBox } from '../CodeBox/CodeBox';\nimport { CopyMessage } from '../CopyMessage/CopyMessage';\nimport { ShareButtons } from '../ShareButtons/ShareButtons';\nimport styles from './CompletedPage.module.css';\n\ninterface IProps {\n  data: any;\n}\n\nexport const CompletedPage: React.FC<IProps> = ({ data }) => {\n  const [showCopied, setShowCopied] = useState(false);\n\n  const dataWithX = { ...data };\n\n  console.log(chartData[2].expectedAnswer);\n  console.log(chartData[3].expectedAnswer);\n\n  dataWithX.xValueAffected =\n    (data[Object.keys(data)[0]] / chartData[0].expectedAnswer +\n      data[Object.keys(data)[1]] / chartData[1].expectedAnswer) /\n    2;\n\n  dataWithX.xValueDomain =\n    (data[Object.keys(data)[2]] / chartData[2].expectedAnswer +\n      data[Object.keys(data)[3]] / chartData[3].expectedAnswer) /\n    2;\n  dataWithX.xValueExpected =\n    (data[Object.keys(data)[4]] / chartData[4].expectedAnswer +\n      data[Object.keys(data)[5]] / chartData[5].expectedAnswer) /\n    2;\n\n  const code = JSON.stringify(dataWithX, null, 4);\n\n  return (\n    <div className={styles.completedPage}>\n      <CopyMessage\n        className={classNames(\n          styles.copyMessage,\n          showCopied ? styles.blendInCopyMessage : ''\n        )}\n      ></CopyMessage>\n      <h1 className={styles.headLine}>Vielen Dank für deine Hilfe!</h1>\n\n      <div className={styles.answersContainer}>\n        <div className={styles.answers}>Deine Antworten</div>\n        <div className={styles.codeBox}>\n          <CodeBox\n            code={code}\n            onCopyClick={() => {\n              setShowCopied(true);\n            }}\n          ></CodeBox>\n        </div>\n      </div>\n\n      <div className={styles.shareContainer}>\n        <div className={styles.sharePlease}>\n          Bitte schicke mir deine Antworten damit ich sie auswerten kann:\n        </div>\n        <ShareButtons code={code} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './TitlePage.module.css';\n\ninterface IProps {\n  onStart: () => any;\n}\n\nexport const TitlePage: React.FC<IProps> = ({ onStart }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <h1 className={styles.headLine}>Umfrage</h1>\n        <div className={styles.time}>Zeitaufwand: 5min.</div>\n        <div className={styles.assignment}>\n          <p>Dir werden gleich verschiedene Balken-Diagramme gezeigt.</p>\n          <p>Schau dir die Größeverhältnisse der Balken genau an.</p>\n          <p> Danach musst du dazu eine Frage beantworten.</p>\n        </div>\n        <div className={styles.dataDisclaimer}>\n          Die Daten werden alle Lokal verarbeitet, am Ende kannst du mir deine\n          Antworten per Mail oder einem Instant-Messenger deiner Wahl schicken.\n        </div>\n      </div>\n\n      <input\n        className={styles.nextButton}\n        type=\"submit\"\n        value=\"Start\"\n        onClick={onStart}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Bar,\n  BarChart,\n  Cell,\n  LabelList,\n  ResponsiveContainer,\n  XAxis,\n} from 'recharts';\nimport { ReactSurveyModel, StylesManager, Survey } from 'survey-react';\nimport 'survey-react/survey.css';\nimport { chartData } from '../../chartData';\nimport { getSurveyData } from '../../surveyData';\nimport { CompletedPage } from '../CompletedPage/CompletedPage';\nimport { TitlePage } from '../TitlePage/TitlePage';\nimport styles from './SurveyPanel.module.css';\n\nexport const SurveyPanel: React.FC = () => {\n  const [survey, setSurvey] = useState(new ReactSurveyModel(getSurveyData()));\n  const [displayChart, setDisplayChart] = useState(true);\n  const [currentChartNo, setCurrentChartNo] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [hasStarted, setHasStarted] = useState(false);\n\n  const numberOfCharts = chartData.length;\n\n  useEffect(() => {\n    StylesManager.applyTheme('winter');\n    return () => {};\n  }, []);\n\n  const handleNext = () => {\n    if (survey.currentPageNo >= numberOfCharts - 1) {\n      if (survey.isLastPage) setIsCompleted(true);\n      else survey.nextPage();\n    } else if (\n      !displayChart &&\n      currentChartNo !== survey.currentPageNo &&\n      !survey.isCurrentPageHasErrors\n    ) {\n      setDisplayChart(true);\n    } else if (displayChart) {\n      setDisplayChart(false);\n      setCurrentChartNo(currentChartNo + 1);\n      if (currentChartNo !== 0) survey.nextPage();\n    }\n  };\n\n  const note = chartData[currentChartNo]?.note ? (\n    <div className={styles.chartNote}> {chartData[currentChartNo].note}</div>\n  ) : (\n    <div className={styles.chartNote}></div>\n  );\n\n  const page = !hasStarted ? (\n    <TitlePage onStart={() => setHasStarted(true)} />\n  ) : isCompleted ? (\n    <CompletedPage data={survey.data}></CompletedPage>\n  ) : displayChart ? (\n    <div className={styles.surveyContainer}>\n      <h1 className={styles.chartTitle}>{chartData[currentChartNo].name}</h1>\n      <ResponsiveContainer className={styles.chartContainer} width={300}>\n        <BarChart\n          data={chartData[currentChartNo].data}\n          barSize={70}\n          barCategoryGap={0}\n        >\n          <XAxis dataKey=\"none\" tickLine={false} tickSize={0}></XAxis>\n          <Bar dataKey=\"value\">\n            <Cell fill=\"#8884d8\" />\n            <Cell fill=\"#00C49F\" />\n            <LabelList dataKey=\"name\" position=\"bottom\" />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n      <div className={styles.footLine}>\n        {note}\n        <input\n          className={styles.nextButton}\n          type=\"submit\"\n          value=\"Weiter\"\n          onClick={handleNext}\n        />\n      </div>\n    </div>\n  ) : (\n    <div className={styles.surveyContainer}>\n      <Survey model={survey} />\n      <input\n        className={styles.nextButton}\n        type=\"submit\"\n        value=\"Weiter\"\n        onClick={handleNext}\n      />\n    </div>\n  );\n\n  return <div className={styles.container}>{page}</div>;\n};\n","import { chartData } from './chartData';\r\n\r\nexport const getSurveyData = () => {\r\n  let data: any = {\r\n    showProgressBar: 'top',\r\n    locale: 'de',\r\n    showNavigationButtons: false,\r\n    pages: [\r\n      {\r\n        questions: [\r\n          {\r\n            type: 'radiogroup',\r\n            name: 'migrationshintergrund',\r\n            title: 'Hast du einen Migrationshintergrund?',\r\n            choices: ['Ja', 'Nein'],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        questions: [\r\n          {\r\n            type: 'radiogroup',\r\n            name: 'privatschule',\r\n            title: 'Haben du oder deine Kinder eine Privatschule besucht?',\r\n            choices: ['Ja', 'Nein'],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title:\r\n          'Wie gut würdest du deine Kenntnisse in folgenden Themengebieten einschätzen?',\r\n\r\n        questions: [\r\n          {\r\n            type: 'rating',\r\n            name: 'Wirtschaft',\r\n            title: 'Wirtschaft',\r\n            mininumRateDescription: 'sehr schlecht',\r\n            maximumRateDescription: 'sehr gut',\r\n          },\r\n          {\r\n            type: 'rating',\r\n            name: 'IT',\r\n            title: 'IT',\r\n            mininumRateDescription: 'sehr schlecht',\r\n            maximumRateDescription: 'sehr gut',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        questions: [\r\n          {\r\n            type: 'radiogroup',\r\n            name: 'zugvsbus',\r\n            title:\r\n              'Hast du erwartet, dass Fernbusse weniger Treibhausgase produzieren als Züge?',\r\n            choices: ['Ja', 'Nein'],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        questions: [\r\n          {\r\n            type: 'radiogroup',\r\n            name: 'flugvsauto',\r\n            title:\r\n              'Hast du erwartet, dass Interkontinental Flugreisen viel mehr CO2 produzieren als das tägliche Pendeln mit dem Auto?',\r\n            choices: ['Ja', 'Nein'],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  //add questions for charts\r\n  const newPages = chartData.map((chart) => {\r\n    return {\r\n      questions: [\r\n        {\r\n          name: chart.name,\r\n          type: 'text',\r\n          inputType: 'number',\r\n          title: chart.question,\r\n          placeHolder: chart.answerPlaceHolder,\r\n          isRequired: true,\r\n        },\r\n      ],\r\n    };\r\n  });\r\n  data.pages.unshift(...newPages);\r\n\r\n  return data;\r\n};\r\n","import React from 'react';\nimport 'survey-react/survey.css';\nimport './App.css';\nimport { SurveyPanel } from './components/SurveyPanel/SurveyPanel';\n\nfunction App() {\n  function resetHeight() {\n    // reset the body height to that of the inner browser\n    document.body.style.height = window.innerHeight + 'px';\n  }\n  // reset the height whenever the window's resized\n  window.addEventListener('resize', resetHeight);\n  // called to initially set the height.\n  resetHeight();\n\n  return (\n    <div className=\"App\">\n      <SurveyPanel></SurveyPanel>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CodeBox_container__313Vz\",\"content\":\"CodeBox_content__1jnRy\",\"copyIcon\":\"CodeBox_copyIcon__2rgZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SurveyPanel_container__1vnJX\",\"surveyContainer\":\"SurveyPanel_surveyContainer__JlCA6\",\"chart\":\"SurveyPanel_chart__3VcXl\",\"chartContainer\":\"SurveyPanel_chartContainer__sbCZo\",\"chartTitle\":\"SurveyPanel_chartTitle__pVadQ\",\"chartNote\":\"SurveyPanel_chartNote__2FwR9\",\"footLine\":\"SurveyPanel_footLine__zoaqM\",\"nextButton\":\"SurveyPanel_nextButton__1whtB\"};"],"sourceRoot":""}